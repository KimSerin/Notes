2강. 예제 db설치와 소개, 데이터베이스 관리(만들기/지우기/변경하기)

- 행 + 열 -> 테이블, 테이블 + 테이블 -> 데이터베이스

- 테이블 or database or 프로세저 생성 create
- 테이블 or database or 프로세저 수정 alter
- 테이블 or database or 프로세저 삭제 drop

- sp_helpdb 데이터베이스이름: 데이터베이스의 상세 설명 보여 줌.(특수문자가 있을경우만 [] 사용)

- 테이블이나 데이터베이스 수정하는데 다른데서 사용중인 경우
: alter database [데이터베이스이름] set single_user with rollback immediate


- 데이터베이스 이름 변경
: sp_renamedb NameNow, NameNew

- 데이타베이스 속성에서 파일 크기 변경 가능
(크기를 줄일 때는 alter가 아닌 shrinkfile을 사용, 처음 지정한 크기 이하로는 줄어들지 않는다)

3강. select1 - 기초, 자료형
- 현재 설정되어 있는 데이터베이스가 아닌 경우  생략 불가
ex)
SELECT TOP (1000) [job_id]
      ,[job_desc]
      ,[min_lvl]
      ,[max_lvl]
  FROM [pubs].[dbo].[jobs] //master에 있는 경우 pubs 생략 불가
							//pubs인 경우 dbo까지 생략 가능
							//dbo는 스키마 //db.스키마.테이블
							
- 데이터베이스 설정 명령어
: use [데이터베이스 이름]	//뒤에 go가 필요하지만 자동으로 추가됨(도구>옵션에서 확인)

- 테이블의 컬럼 확인 명령어
: exec sp_help [테이블 이름], exec sp_columns [테이블 이름]

- 컬럼 선택하여 출력
: select [컬럼이름], [컬럼이름]... from [테이블 이름]
컬럼이름에 문자열도 출력 가능
ex)
select 'test' as new_column, [컬럼이름],... from [테이블 이름]
-> new_column이라는 컬럼에 모두 test가 출력
-> 존재하는 컬럼도 as를 사용해서 컬럼명을 다르게 출력할 수 있음
-> as는 생략 가능하지만 쓰는게 좋다

- 변수 선언
: declare @id int, @name char(10) // declare + @ + 변수이름 + 자료형
  set @id = 0	//set으로 변수 초기화
  set @name = '김세린'	//set 여러개여도 생략불가
  select @id, @name

- 도움말 필요시 shift + f1

- char와 varchar의 차이
: char(10)은 대입하는 값의 길이와 상관없이 길이 10으로 할당
  varchar(10)은 대입하는 값의 길이에 따라 길이가 달라짐
ex)   
: declare @c char(10), @v varchar(10)
  set @c = '김세린'
  set @v = '김세린'
  select @c+'추가', @v+'추가'
  -> c는 '김세린     추가' 출력
     v는 '김세린추가' 출력
  주소같은 길이가 다양한 항목은 varchar, 사번같은 길이가 정해진 항목은 char로 설정
  
- 숫자 자료형
: bit(bool, 1비트)
: numeric, decimal(numeric과 같음)(전체자리수, 소수점자리수 설정 가능하지만 용량이 커서 성능에 안좋다)
: 정확한 숫자 표현 시 float이나 real 대신 money 또는 small money 사용 권장
	 
- 문자형
: char, varchar, text(2기가 상당 문자열 저장)

- 바이너리
: binary(hex(바이너리) 값을 저장, 이미지 또는 exe 파일 저장), varbinary(binary기능 + var 기능)

- Unicode character
: nchar, nvarchar, ntext
(national이 붙은 형, 다국어 저장이 가능, 깨지지 않음)
ex)insert into dbo.mytable values (N 'Test data', N'More test data')	//대입 시 n 붙임

- datetime
:.000, .003, .007을 단위로 반올림 되는 것에 주의 
ex) 2019.4.9 13:34:28.999 저장하면 -> 2020.0.0 00:00:00으로 저장 됨
: 2019.4.9, 2019/4/9, 2019-4-9 모두 가능
: set dateformat ymd(년월일 or 월일년 or 일월년 설정 가능)

- 사용자 정의 자료형
: sp_addtype tProdID, 'CHAR(6)'
  sp_addtype tPrice, 'SMALLINT'
  //프로그래밍 기능>사용자정의 데이터 형식에서 확인 가능
  // sp_help '사용자정의 자료형 이름' 또는 그냥 sp_help로 확인
  //CREATE TYPE과 같음(앞으로 사용)
: sp_droptype 타입이름
  //사용자 정의 자료형 삭제
  //DROP TYPE과 같음
 
4강. select2 - 기초, 자료형
- 자료형 바꾸기
: select 1+3	//4
: select 'a'+'b'	//ab
: select 1+'4'	//5 //데이터 형식 우선 순위에 따라 자료형이 바뀜 int>char
: select 'a'+'b'+4	//오류 //데이터 형식 우선 순위에 따라 int>char but a 나 b 는 int로 변환 불가
: select 'a'+'b'+convert(char(1),4)	//암시적 형변환이 불가항 상황이므로 명시적으로 변환 //char 1자리로 변환
: select getdate()+1	//가능, 날짜 하루 더해 짐
: select 10/3	//3
: select 10.0/3	//3.3333
: select 10./3	//3.3333
: select 10/3.	//3.3333
: select convert(decimal(10,8),10)/3	//3.33333333
: substring(자르기), cast(convert와 같음, ansi 사용하는 db면 다 사용가능), left
: floor(절사, 버림), ceiling(절상, 올림), round(반올림)
ex) ROUND(748.58, -1)	//750	//두번째 파라미터가 마이너스인 경우, 소수점 앞에서 반올림	
: replicate(반복), reverse(거꾸로 출력)
: stuff(해당 위치 문자 변경)
ex) stuff('123456', 3, 2, 'abcde')	//12abcde56	//1부터 시작
: replace(해당 문자를 찾아서 변경)(많이씀)


4강 11시13분











	
 
